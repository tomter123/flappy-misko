// RLE-Encoded RGB565 Data
const uint32_t rle_length = 156;
const uint16_t rle_data[] = {
    0x0297, 0x0000,  // Run:   663, Color: 0x0000
    0x00D6, 0xFFFF,  // Run:   214, Color: 0xFFFF
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0xE6BB,  // Run:   213, Color: 0xE6BB
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0006, 0x0000,  // Run:     6, Color: 0x0000
    0x0001, 0xFFFF,  // Run:     1, Color: 0xFFFF
    0x00D5, 0x8A49,  // Run:   213, Color: 0x8A49
    0x0297, 0x0000 // Run:   663, Color: 0x0000
};
